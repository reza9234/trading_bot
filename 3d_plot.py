from mpl_toolkits.mplot3d import axes3d
import matplotlib.pyplot as plt
import numpy as np
import matplotlib as mpl
from mpl_toolkits.mplot3d import Axes3D
import math

list_result = [(60, 40, 50, 50, 1.0, (114.59, 16)), (60, 40, 50, 50, 1.1, (104.11, 16)), (60, 40, 50, 50, 1.2, (80.5, 17)), (60, 40, 50, 50, 1.3, (91.52, 17)), (60, 40, 50, 50, 1.4, (119.7, 16)), (60, 40, 50, 50, 2.1, (74.98, 9)), (60, 40, 51, 49, 1.0, (118.53, 18)), (60, 40, 51, 49, 1.1, (99.47, 19)), (60, 40, 51, 49, 1.2, (89.99, 19)), (60, 40, 51, 49, 1.3, (59.35, 20)), (60, 40, 51, 49, 2.1, (79.74, 9)), (60, 40, 52, 48, 2.1, (86.48, 9)), (60, 40, 53, 47, 2.0, (64.14, 13)), (60, 40, 53, 47, 2.1, (94.72, 9)), (60, 40, 54, 46, 2.0, (73.38, 13)), (60, 40, 54, 46, 2.1, (89.95, 10)), (60, 40, 55, 45, 2.0, (95.4, 13)), (60, 40, 55, 45, 2.1, (95.85, 10)), (60, 40, 56, 44, 2.0, (86.12, 14)), (60, 40, 56, 44, 2.1, (87.34, 13)), (60, 40, 57, 43, 2.0, (88.09, 16)), (60, 40, 57, 43, 2.1, (66.66, 18)), (60, 40, 58, 42, 2.0, (82.41, 24)), (60, 40, 58, 42, 2.1, (52.28, 24)), (60, 40, 59, 41, 2.0, (54.4, 30)), (61, 39, 50, 50, 1.0, (82.16, 16)), (61, 39, 50, 50, 1.1, (73.05, 16)), (61, 39, 50, 50, 1.2, (83.53, 16)), (61, 39, 50, 50, 1.3, (120.41, 15)), (61, 39, 50, 50, 1.4, (108.48, 15)), (61, 39, 50, 50, 2.1, (73.25, 9)), (61, 39, 51, 49, 1.0, (84.1, 18)), (61, 39, 51, 49, 1.1, (63.0, 19)), (61, 39, 51, 49, 1.2, (84.89, 18)), (61, 39, 51, 49, 1.3, (80.21, 18)), (61, 39, 51, 49, 2.0, (54.87, 11)), (61, 39, 51, 49, 2.1, (78.01, 9)), (61, 39, 52, 48, 2.0, (62.13, 11)), (61, 39, 52, 48, 2.1, (84.75, 9)), (61, 39, 53, 47, 2.0, (74.21, 11)), (61, 39, 53, 47, 2.1, (92.99, 9)), (61, 39, 54, 46, 2.0, (81.38, 11)), (61, 39, 54, 46, 2.1, (78.68, 10)), (61, 39, 55, 45, 2.0, (104.05, 11)), (61, 39, 55, 45, 2.1, (84.59, 10)), (61, 39, 56, 44, 2.0, (99.06, 11)), (61, 39, 56, 44, 2.1, (78.16, 12)), (61, 39, 57, 43, 2.0, (106.6, 12)), (61, 39, 57, 43, 2.1, (58.46, 16)), (61, 39, 58, 42, 1.9, (55.96, 18)), (61, 39, 58, 42, 2.0, (99.84, 18)), (61, 39, 58, 42, 2.1, (50.85, 20)), (61, 39, 59, 41, 2.0, (60.67, 24)), (61, 39, 59, 41, 2.1, (54.29, 21)), (61, 39, 60, 40, 2.0, (51.64, 31)), (61, 39, 60, 40, 2.1, (61.55, 26)), (62, 38, 50, 50, 1.0, (105.15, 14)), (62, 38, 50, 50, 1.1, (102.22, 14)), (62, 38, 50, 50, 1.2, (83.38, 15)), (62, 38, 50, 50, 1.3, (88.84, 15)), (62, 38, 50, 50, 1.4, (80.96, 15)), (62, 38, 50, 50, 2.1, (76.76, 8)), (62, 38, 51, 49, 1.0, (104.66, 16)), (62, 38, 51, 49, 1.1, (87.63, 17)), (62, 38, 51, 49, 1.2, (81.42, 17)), (62, 38, 51, 49, 1.3, (65.77, 17)), (62, 38, 51, 49, 2.1, (81.52, 8)), (62, 38, 52, 48, 1.9, (54.37, 10)), (62, 38, 52, 48, 2.1, (86.24, 8)), (62, 38, 53, 47, 1.9, (59.38, 10)), (62, 38, 53, 47, 2.0, (57.84, 10)), (62, 38, 53, 47, 2.1, (93.94, 8)), (62, 38, 54, 46, 1.9, (66.52, 10)), (62, 38, 54, 46, 2.0, (65.02, 10)), (62, 38, 54, 46, 2.1, (76.37, 9)), (62, 38, 55, 45, 1.9, (75.27, 10)), (62, 38, 55, 45, 2.0, (85.22, 10)), (62, 38, 55, 45, 2.1, (82.28, 9)), (62, 38, 56, 44, 1.9, (80.84, 11)), (62, 38, 56, 44, 2.0, (92.5, 10)), (62, 38, 56, 44, 2.1, (70.77, 11)), (62, 38, 57, 43, 1.9, (80.2, 13)), (62, 38, 57, 43, 2.0, (95.34, 11)), (62, 38, 58, 42, 1.9, (88.24, 13)), (62, 38, 58, 42, 2.0, (61.29, 17)), (62, 38, 59, 41, 1.9, (72.32, 18)), (62, 38, 60, 40, 1.9, (65.24, 23)), (62, 38, 61, 39, 1.9, (69.9, 30)), (63, 37, 50, 50, 1.0, (86.3, 14)), (63, 37, 50, 50, 1.1, (79.65, 14)), (63, 37, 50, 50, 1.2, (50.51, 15)), (63, 37, 50, 50, 2.1, (73.1, 7)), (63, 37, 51, 49, 1.0, (84.49, 15)), (63, 37, 51, 49, 1.1, (59.45, 16)), (63, 37, 51, 49, 2.1, (77.87, 7)), (63, 37, 52, 48, 2.0, (52.37, 9)), (63, 37, 52, 48, 2.1, (82.58, 7)), (63, 37, 53, 47, 2.0, (60.74, 9)), (63, 37, 53, 47, 2.1, (90.33, 7)), (63, 37, 54, 46, 1.9, (53.9, 10)), (63, 37, 54, 46, 2.0, (66.77, 9)), (63, 37, 54, 46, 2.1, (57.86, 8)), (63, 37, 55, 45, 1.9, (62.66, 10)), (63, 37, 55, 45, 2.0, (86.51, 9)), (63, 37, 55, 45, 2.1, (63.78, 8)), (63, 37, 56, 44, 1.9, (68.24, 11)), (63, 37, 56, 44, 2.0, (93.79, 9)), (63, 37, 56, 44, 2.1, (51.11, 10)), (63, 37, 57, 43, 1.9, (62.07, 13)), (63, 37, 57, 43, 2.0, (91.8, 10)), (63, 37, 58, 42, 1.9, (70.13, 13)), (63, 37, 58, 42, 2.0, (61.52, 15)), (63, 37, 61, 39, 1.9, (52.16, 26)), (64, 36, 50, 50, 2.0, (63.47, 7)), (64, 36, 50, 50, 2.1, (67.61, 7)), (64, 36, 51, 49, 2.0, (69.27, 7)), (64, 36, 51, 49, 2.1, (72.37, 7)), (64, 36, 52, 48, 2.0, (73.3, 7)), (64, 36, 52, 48, 2.1, (77.09, 7)), (64, 36, 53, 47, 2.0, (80.01, 7)), (64, 36, 53, 47, 2.1, (84.84, 7)), (64, 36, 54, 46, 2.0, (85.13, 7)), (64, 36, 55, 45, 1.9, (53.93, 10)), (64, 36, 55, 45, 2.0, (104.13, 7)), (64, 36, 56, 44, 1.8, (62.54, 10)), (64, 36, 56, 44, 1.9, (59.51, 11)), (64, 36, 56, 44, 2.0, (111.4, 7)), (64, 36, 57, 43, 1.8, (67.2, 10)), (64, 36, 57, 43, 1.9, (73.15, 11)), (64, 36, 57, 43, 2.0, (102.74, 8)), (64, 36, 58, 42, 1.8, (80.7, 10)), (64, 36, 58, 42, 1.9, (81.21, 11)), (64, 36, 58, 42, 2.0, (74.85, 12)), (64, 36, 59, 41, 1.8, (80.13, 12)), (64, 36, 59, 41, 1.9, (61.05, 15)), (64, 36, 60, 40, 1.8, (66.66, 15)), (64, 36, 60, 40, 1.9, (55.93, 18)), (64, 36, 60, 40, 2.0, (56.58, 15)), (64, 36, 61, 39, 1.8, (51.09, 21)), (64, 36, 61, 39, 1.9, (63.33, 22)), (64, 36, 61, 39, 2.0, (56.09, 16)), (64, 36, 62, 38, 2.0, (52.8, 19)), (65, 35, 51, 49, 2.1, (51.3, 7)), (65, 35, 52, 48, 1.9, (52.02, 8)), (65, 35, 52, 48, 2.0, (52.43, 7)), (65, 35, 52, 48, 2.1, (56.02, 7)), (65, 35, 53, 47, 1.9, (56.16, 8)), (65, 35, 53, 47, 2.0, (59.15, 7)), (65, 35, 53, 47, 2.1, (63.77, 7)), (65, 35, 54, 46, 1.9, (61.29, 8)), (65, 35, 54, 46, 2.0, (64.28, 7)), (65, 35, 55, 45, 1.9, (66.71, 8)), (65, 35, 55, 45, 2.0, (83.37, 7)), (65, 35, 56, 44, 1.8, (61.88, 9)), (65, 35, 56, 44, 1.9, (62.62, 9)), (65, 35, 56, 44, 2.0, (90.67, 7)), (65, 35, 57, 43, 1.8, (65.76, 9)), (65, 35, 57, 43, 1.9, (75.82, 9)), (65, 35, 57, 43, 2.0, (74.27, 8)), (65, 35, 58, 42, 1.8, (79.26, 9)), (65, 35, 58, 42, 1.9, (82.62, 9)), (65, 35, 59, 41, 1.8, (76.07, 11)), (65, 35, 60, 40, 1.8, (64.34, 13)), (65, 35, 63, 37, 1.9, (55.53, 21)), (66, 34, 50, 50, 2.1, (55.33, 6)), (66, 34, 51, 49, 2.1, (58.69, 6)), (66, 34, 52, 48, 1.9, (50.36, 7)), (66, 34, 52, 48, 2.1, (62.4, 6)), (66, 34, 53, 47, 1.8, (56.32, 7)), (66, 34, 53, 47, 1.9, (54.13, 7)), (66, 34, 53, 47, 2.0, (52.17, 7)), (66, 34, 53, 47, 2.1, (69.35, 6)), (66, 34, 54, 46, 1.8, (60.49, 7)), (66, 34, 54, 46, 1.9, (59.27, 7)), (66, 34, 54, 46, 2.0, (57.3, 7)), (66, 34, 55, 45, 1.8, (66.29, 7)), (66, 34, 55, 45, 1.9, (64.7, 7)), (66, 34, 55, 45, 2.0, (76.43, 7)), (66, 34, 56, 44, 1.8, (80.36, 7)), (66, 34, 56, 44, 1.9, (68.68, 7)), (66, 34, 56, 44, 2.0, (83.74, 7)), (66, 34, 57, 43, 1.8, (83.77, 7)), (66, 34, 57, 43, 1.9, (79.03, 7)), (66, 34, 57, 43, 2.0, (68.1, 8)), (66, 34, 58, 42, 1.8, (95.67, 7)), (66, 34, 58, 42, 1.9, (84.91, 7)), (66, 34, 59, 41, 1.7, (59.74, 10)), (66, 34, 59, 41, 1.8, (90.71, 9)), (66, 34, 60, 40, 1.7, (57.22, 11)), (66, 34, 60, 40, 1.8, (73.22, 11)), (66, 34, 64, 36, 1.8, (54.38, 20)), (67, 33, 55, 45, 1.9, (53.9, 7)), (67, 33, 55, 45, 2.0, (66.56, 6)), (67, 33, 56, 44, 1.8, (63.67, 7)), (67, 33, 56, 44, 1.9, (57.88, 7)), (67, 33, 56, 44, 2.0, (72.17, 6)), (67, 33, 57, 43, 1.7, (52.35, 8)), (67, 33, 57, 43, 1.8, (67.09, 7)), (67, 33, 57, 43, 1.9, (68.24, 7)), (67, 33, 58, 42, 1.7, (55.71, 8)), (67, 33, 58, 42, 1.8, (79.03, 7)), (67, 33, 58, 42, 1.9, (74.12, 7)), (67, 33, 59, 41, 1.7, (78.79, 8)), (67, 33, 59, 41, 1.8, (70.53, 9)), (67, 33, 60, 40, 1.7, (70.5, 9)), (67, 33, 60, 40, 1.8, (50.82, 11)), (68, 32, 53, 47, 1.9, (52.33, 6)), (68, 32, 54, 46, 1.9, (56.06, 6)), (68, 32, 55, 45, 1.9, (60.48, 6)), (68, 32, 55, 45, 2.0, (64.57, 6)), (68, 32, 56, 44, 1.8, (53.86, 7)), (68, 32, 56, 44, 1.9, (63.67, 6)), (68, 32, 56, 44, 2.0, (70.19, 6)), (68, 32, 57, 43, 1.8, (57.29, 7)), (68, 32, 57, 43, 1.9, (74.04, 6)), (68, 32, 58, 42, 1.8, (69.24, 7)), (68, 32, 58, 42, 1.9, (77.11, 6)), (68, 32, 59, 41, 1.7, (70.51, 7)), (68, 32, 60, 40, 1.7, (61.71, 8)), (69, 31, 56, 44, 1.8, (57.46, 6)), (69, 31, 56, 44, 2.0, (53.58, 6)), (69, 31, 57, 43, 1.8, (60.1, 6)), (69, 31, 57, 43, 1.9, (53.02, 6)), (69, 31, 58, 42, 1.8, (72.05, 6)), (69, 31, 58, 42, 1.9, (56.1, 6)), (69, 31, 59, 41, 1.7, (69.52, 7)), (69, 31, 60, 40, 1.7, (57.38, 8)), (70, 30, 58, 42, 1.6, (51.86, 6)), (70, 30, 58, 42, 1.8, (57.05, 6)), (70, 30, 58, 42, 1.9, (50.16, 6)), (70, 30, 59, 41, 1.6, (55.85, 6)), (70, 30, 59, 41, 1.7, (68.23, 6)), (70, 30, 60, 40, 1.7, (52.52, 7)), (70, 30, 61, 39, 1.6, (57.49, 7)), (71, 29, 59, 41, 1.7, (54.13, 6)), (72, 28, 65, 35, 1.2, (53.65, 8)), (73, 27, 50, 50, 1.0, (58.79, 5)), (73, 27, 50, 50, 1.1, (50.06, 5))]


def plot_3d(list_):
    mpl.rcParams['legend.fontsize'] = 10
    fig = plt.figure()
    ax = fig.gca(projection='3d')

    x = [item[0] for item in list_]
    y = [item[2] for item in list_]
    z = [item[5][0] for item in list_]

    ax.scatter(x, y, z, label='parametric curve')
    ax.legend()
    ax.set_xlabel('X Label')
    ax.set_ylabel('Y Label')
    ax.set_zlabel('Z Label')
    plt.show()

def d(arg1, arg2):
    distance = math.sqrt((arg1[0]-arg2[0])**2 + (arg1[2]-arg2[2])**2 + (arg1[5][0]-arg2[5][0])**2 + (arg1[4]-arg2[4])**2)
    return distance

list_sum_d = []
for i in range(len(list_result)):
    sum = 0
    for j in range(len(list_result)):
        sum += d(list_result[i], list_result[j])
    list_sum_d.append(sum)


print(len(list_result))
for k in range(200):
    max_ = max(list_sum_d)
    for i in range(len(list_sum_d)):
        if max_ == list_sum_d[i]:
            del list_sum_d[i]
            del list_result[i]
            break

plot_3d(list_result)
print(list_result)